## define和inline的优缺点总结：

* 宏define在预处理阶段,而inline是在编译阶段进行的inlining
* 类型安全检查：inline函数是函数，要做类型检查；函数参数检查，但是宏定义不用
* 替换方式：define实现的是字符串替换，inline是指嵌入代码，在编译过程中不单独产生代码，在调用函数的地方不是跳转，而是把代码直接写到那里去，对于短小的函数比较实用，且安全可靠。
* inline函数是否展开由编译器决定，有时候函数太大时，编译器可能选择不展开相应的函数。

## define的优点

* 方便程序的修改

* 提高程序的运行效率（宏函数，没有函数的开销）但是增加了代码的体积


* inline在头文件中就是单例模式

## static 和 const
const是由编译器对某些变量做出限定不能修改，增加程序的健壮性

static对于变量或者成员而言实际上也就是对自己的属性做出限制，在C语言中在某个函数中如果定义了就只会定义一次无论是否下次会不会进这个函数。对于类对象来说，static成员就是属于类的而不是属于对象的。还有就是static是针对编译单元而定的，如果头文件中有static变量，那个包含这个头文件中的每个编译单元就是每个.cpp文件都会有一个static变量