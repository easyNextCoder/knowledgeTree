volatile关键字是一种类型修饰符，用它声明的类型变量表示可以
被某些编译器未知的因素更改，比如操作系统硬件或者其他线程等。

当要求使用volatile声明的变量的值的时候，系统总是重新从它所在
的内存读取数据，即使他前面的命令刚刚从该处读取过数据。而且读取的数据立刻被保存。

其实不只是“内嵌汇编操纵栈”这种方式属于编译无法识别的变量改变
另外更多的可能是多线程并发访问共享变量时，一个线程改变了变量的值
怎样让改变后的值对其他线程visible。一般来说volatile用在如下几个地方：
（1）中断服务程序中修改的供其他程序检测的变量需要佳volatile
(2)多任务环境霞各任务间共享的标志应该加volatile
（3）存储器映射的硬件寄存器通常也要加volatile说明，因为每次对它的读写都可能有不同意义。

多线程下的volatile   

    有些变量是用volatile关键字声明的。当两个线程都要用到某一个变量且该变量的值会被改变时，
应该用volatile声明，该关键字的作用是防止优化编译器把变量从内存装入CPU寄存器中。
如果变量被装入寄存器，那么两个线程有可能一个使用内存中的变量，一个使用寄存器中的变量，
这会造成程序的错误执行。volatile的意思是让编译器每次操作该变量时一定要从内存中真正取出，
而不是使用已经存在寄存器中的值

》https://blog.csdn.net/LU_ZHAO/article/details/104802876

