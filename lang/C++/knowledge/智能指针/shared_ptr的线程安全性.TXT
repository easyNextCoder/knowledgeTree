https://blog.csdn.net/solstice/article/details/8547547
shared_ptr的引用计数本身是安全且无锁的，但对象的读写则不是，因为shared_ptr有两个数据成员，读写操作不能原子化。
shared_ptr的线程安全级别和内建类型，标准库容器，std::string一样即：
1.一个shared_ptr对象实体可被多个线程同时读取
2.两个shared_ptr对象实体可以被两个线程同时写入（析构，算写操作）
3.如果要从多个线程读写同一个shared_ptr对象，那么需要加锁。
注意：以上是shared_ptr对象本身的线程安全级别，不是它管理的对象的线程安全级别。