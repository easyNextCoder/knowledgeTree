异常的类别：
（1）中断：中断是异步发生的，来自处理器外部IO设备的信号（区别于同步异常：执行一条指令的结果），
	     它不是由任何一条专门的指令造成的。例如网络适配器、磁盘控制器通过向处理器芯片上的
	     一个管脚发信号，并将异常号放在系统总线上，来触发中断，这个异常号标识了引起中断的设备。
	     中断处理程序总是返回到当前指令的下一条指令。

（2）陷阱：陷阱是同步异常，是执行一条指令的结果。陷阱最重要的用途是在用户程序和内核之间
	  提供系统调用接口。陷阱总返回到当前指令的下一条指令。

（3）故障：故障由错误引起，它可能被故常处理程序修正，如果修正成功，将返回到当前正在执行的指令，
	  重新执行。否则处理程序返回到内核的abort历程，将终止故障程序。故障的一个典型是缺页异常。

（4）终止：由不可恢复的知名错误造成的结果，处理程序将返回到内核中的abort例程，终止应用程序。
原文链接：https://blog.csdn.net/clearriver/article/details/5120299

异常：是指CPU内部出现的中断，即在CPU执行特定指令时出现的非法情况
	同时异常也称为同步中断，因为只有在一条指令执行后才会发出
	中断，不可能在指令执行期间发生异常。

中断：也称为异步中断。它是由其他硬件设备依照CPU时钟信号随机产生
	意味着中断能在指令之间发生。

	中断主要响应外部硬件设备

	中断通过中断控制器产生，中断号是由中断控制器提供的（NMI硬中断
	中断号系统指定为02H）

	中断又分为外部可屏蔽中断（INTR)和外部非屏蔽中断(NMI)
		所有IO设备产生的中断请求均引起可屏蔽中断
		硬件故障引起的故障则产生非屏蔽中断

	中断使用自己的中断上下文，原来的进程上下文保持不变，而且可以返回
	中断之前所作的事件

	在CPU执行一个异常处理程序时，就不再响应其他异常和中断请求服务。
	如果此时产生多个非屏蔽中断时，CPU的处理方法跟异常处理方法一样
	使用堆栈。

	