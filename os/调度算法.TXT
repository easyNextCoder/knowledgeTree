基本准则：
系统吞吐量：单位时间内CPU完成作业的数量
周转时间：作业完成时刻减去作业到达的时间
等待时间：指进程处于等处理器状态的时间和，等待时间越长，用户满意度越低
响应时间：指从用户提交请求到系统首次产生响应所用的时间


典型的调度算法：
先来先服务：有利于长作业，但不利于短作业，因为短作业必须一直等待前面的长作业执行完毕才能执行。
短作业优先：长作业可能会饿死，处于一直等待的状态。
时间片轮转：时间片轮转算法的效率和时间片的大小有很大关系：时间片过短会在进程切换上花费太多时间，时间片过长实时性得不到保证。
优先级调度：为每个进程分配一个优先级，按优先级进行调度。




死锁产生的原因



死锁产生的必要条件

互斥条件：进程要求对所分配的资源进行排他性控制，
	即一段时间内某资源仅为一个进程所占有，
	此时若有其他进程请求该资源，只能等待

不剥夺条件：进程所获得的资源在未使用完毕之前，不能被
	其他进程强行夺走，即只能由获得该资源的进程来释放

请求和保持条件：进程每次申请它所需要的一部分资源，在等待新资源的同时
	         继续占有自己分配到的资源

循环等待条件：存在一种进程资源的循环等待链，链中每个进程已获得的
	      资源同时被链中下一个进程所请求。

死锁处理策略：

1. 预防死锁：破坏死锁必要条件的一个或多个
2.避免死锁：在资源的动态分配过程中，用某种方法防止系统进入不安全状态。
	银行家算法是著名的死锁避免算法
3.死锁的检测及解除：允许发生死锁，通过系统的检测机制及时的检测出死锁的发生
	然后采取某种措施解除死锁。
	主要方法：
		资源剥夺法
		撤销进程法
		进程回退法